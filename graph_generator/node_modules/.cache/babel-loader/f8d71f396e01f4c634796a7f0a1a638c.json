{"ast":null,"code":"var _jsxFileName = \"/Users/finn/Documents/skole/master_thesis/graph_generator/src/Main.js\";\nimport React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport { baseData, cycleData, adjustedCycleData, nnData, adjustedNnData, totalData, freeData } from \"./memoryData\";\nimport MemoryBarChart from \"./MemoryBarChart\";\nimport MemoryPieChart from \"./MemoryPieChart\";\nimport { cycleRuntimeData } from \"./runtimeData\";\nimport RuntimeLineChart from \"./RuntimeLineChart\";\nexport default class Main extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toDisplay: \"mem\"\n    };\n\n    this.formatDataForPie = dataIndex => {\n      const dataNames = [\"Overhead\", \"Cyclic\", \"Neural network\", \"Free\"];\n      return [baseData, adjustedCycleData, adjustedNnData, freeData].map((dataPoint, i) => ({\n        name: dataNames[i],\n        value: dataPoint[dataIndex].used\n      }));\n    };\n\n    this.renderMemoryCharts = () => {\n      console.log(\"rendering memory\");\n      return React.createElement(\"div\", {\n        className: \"chartsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"barCharts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Individual data points\"), React.createElement(MemoryBarChart, {\n        title: \"Common memory overhead\",\n        data: baseData,\n        heavyFillColor: \"#fcba03\",\n        lightFillColor: \"#ffe18f\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(MemoryBarChart, {\n        title: \"Cyclic sensor memory footprint\",\n        data: cycleData,\n        heavyFillColor: \"#199c52\",\n        lightFillColor: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(MemoryBarChart, {\n        title: \"Neural Network memory consumption\",\n        data: nnData,\n        heavyFillColor: \"#65bfe0\",\n        lightFillColor: \"#b3e8fc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"totalChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Total\"), React.createElement(MemoryBarChart, {\n        title: \"Total memory usage at compile time\",\n        data: totalData,\n        heavyFillColor: \"#35374a\",\n        lightFillColor: \"#adafc4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(MemoryPieChart, {\n        title: \"Program memory distribution\",\n        data: this.formatDataForPie(0),\n        colors: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(MemoryPieChart, {\n        title: \"Dynamic memory distribution\",\n        data: this.formatDataForPie(1),\n        colors: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    };\n\n    this.renderRuntimeCharts = () => {\n      console.log(\"rendering runtime\");\n      return React.createElement(\"div\", {\n        className: \"chartsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"barCharts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Runtime memory\"), React.createElement(RuntimeLineCharteChart, {\n        title: \"Sense Cycle Runtime\",\n        data: cycleRuntimeData,\n        stroke1: \"#8884d8\",\n        stroke2: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginLeft: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"IoT Power Consumption Master Thesis 2020 Graphs\"), React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Display:\", React.createElement(\"select\", {\n      onChange: e => this.setState({\n        toDisplay: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"mem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Memory charts\"), React.createElement(\"option\", {\n      value: \"run\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Runtime charts\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.toDisplay === \"mem\" && this.renderMemoryCharts(), this.state.toDisplay === \"run\" && this.renderRuntimeCharts()));\n  }\n\n}\nMain.jsfiddleUrl = \"https://jsfiddle.net/alidingling/90v76x08/\";","map":{"version":3,"sources":["/Users/finn/Documents/skole/master_thesis/graph_generator/src/Main.js"],"names":["React","PureComponent","baseData","cycleData","adjustedCycleData","nnData","adjustedNnData","totalData","freeData","MemoryBarChart","MemoryPieChart","cycleRuntimeData","RuntimeLineChart","Main","state","toDisplay","formatDataForPie","dataIndex","dataNames","map","dataPoint","i","name","value","used","renderMemoryCharts","console","log","marginLeft","renderRuntimeCharts","render","e","setState","target","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport {\n  baseData,\n  cycleData,\n  adjustedCycleData,\n  nnData,\n  adjustedNnData,\n  totalData,\n  freeData,\n} from \"./memoryData\";\nimport MemoryBarChart from \"./MemoryBarChart\";\nimport MemoryPieChart from \"./MemoryPieChart\";\nimport { cycleRuntimeData } from \"./runtimeData\";\nimport RuntimeLineChart from \"./RuntimeLineChart\";\n\nexport default class Main extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/90v76x08/\";\n\n  state = {\n    toDisplay: \"mem\",\n  };\n\n  formatDataForPie = (dataIndex) => {\n    const dataNames = [\"Overhead\", \"Cyclic\", \"Neural network\", \"Free\"];\n    return [baseData, adjustedCycleData, adjustedNnData, freeData].map(\n      (dataPoint, i) => ({\n        name: dataNames[i],\n        value: dataPoint[dataIndex].used,\n      })\n    );\n  };\n\n  renderMemoryCharts = () => {\n    console.log(\"rendering memory\");\n    return (\n      <div className=\"chartsContainer\">\n        <div className=\"barCharts\">\n          <h2 style={{ marginLeft: \"30px\" }}>Individual data points</h2>\n          <MemoryBarChart\n            title={\"Common memory overhead\"}\n            data={baseData}\n            heavyFillColor=\"#fcba03\"\n            lightFillColor=\"#ffe18f\"\n          />\n          <MemoryBarChart\n            title={\"Cyclic sensor memory footprint\"}\n            data={cycleData}\n            heavyFillColor=\"#199c52\"\n            lightFillColor=\"#82ca9d\"\n          />\n          <MemoryBarChart\n            title={\"Neural Network memory consumption\"}\n            data={nnData}\n            heavyFillColor=\"#65bfe0\"\n            lightFillColor=\"#b3e8fc\"\n          />\n        </div>\n        <div className=\"totalChart\">\n          <h2 style={{ marginLeft: \"30px\" }}>Total</h2>\n          <MemoryBarChart\n            title={\"Total memory usage at compile time\"}\n            data={totalData}\n            heavyFillColor=\"#35374a\"\n            lightFillColor=\"#adafc4\"\n          />\n          <MemoryPieChart\n            title={\"Program memory distribution\"}\n            data={this.formatDataForPie(0)}\n            colors={[\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]}\n          />\n          <MemoryPieChart\n            title={\"Dynamic memory distribution\"}\n            data={this.formatDataForPie(1)}\n            colors={[\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  renderRuntimeCharts = () => {\n    console.log(\"rendering runtime\");\n    return (\n      <div className=\"chartsContainer\">\n        <div className=\"barCharts\">\n          <h2 style={{ marginLeft: \"30px\" }}>Runtime memory</h2>\n          <RuntimeLineCharteChart\n            title={\"Sense Cycle Runtime\"}\n            data={cycleRuntimeData}\n            stroke1=\"#8884d8\"\n            stroke2=\"#8884d8\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ marginLeft: \"30px\" }}>\n          IoT Power Consumption Master Thesis 2020 Graphs\n        </h1>\n        <div className=\"dropdown\">\n          Display:\n          <select\n            onChange={(e) => this.setState({ toDisplay: e.target.value })}\n          >\n            <option value=\"mem\">Memory charts</option>\n            <option value=\"run\">Runtime charts</option>\n          </select>\n        </div>\n        <div>\n          {this.state.toDisplay === \"mem\" && this.renderMemoryCharts()}\n          {this.state.toDisplay === \"run\" && this.renderRuntimeCharts()}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}